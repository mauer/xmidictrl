name: build-all-platforms

on:
  push:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  PRJ_NAME: XMidiCtrl

jobs:
  # Build Linux with GCC
  build-lin:
    runs-on: ubuntu-24.04
    env:
      platform: lin
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-lin
        id: build
        with:
          pluginName: ${{ env.PRJ_NAME }}

      - name: Artifact upload
        uses: ./.github/actions/plugin-upload
        with:
          pluginName: ${{ env.PRJ_NAME }}
          archFolder: lin_x64
          xplFileName: "${{ steps.build.outputs.xpl-file-name }}"

  # MacOS with CMake/clang (and sign/notarize)
  build-mac:
    runs-on: macos-15
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-mac
        id: build
        with:
          pluginName: ${{ env.PRJ_NAME }}

#      - name: Check if Secrets available
#        id: checksecrets
#        env:
#          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
#        shell: bash
#        run: |
#          if [ "$MACOS_CERTIFICATE" == "" ]; then
#            echo "secretspresent=" >> $GITHUB_OUTPUT
#          else
#            echo "secretspresent=true" >> $GITHUB_OUTPUT
#          fi

#      - name: Codesign and Notarization
#        if: ${{ steps.checksecrets.outputs.secretspresent }}
#        uses: ./.github/actions/sign-notarize
#        with:
#          xplFileName:    ${{ steps.build.outputs.xpl-file-name }}
#          certificate:    ${{ secrets.MACOS_CERTIFICATE }}
#          certPwd:        ${{ secrets.MACOS_CERT_PWD }}
#          notarizeUser:   ${{ secrets.NOTARIZATION_USERNAME }}
#          notarizeTeam:   ${{ secrets.NOTARIZATION_TEAM }}
#          notarizeAppPwd: ${{ secrets.NOTARIZATION_PASSWORD }}

      - name: Upload Artifact
        uses: ./.github/actions/plugin-upload
        with:
          pluginName: ${{ env.PRJ_NAME }}
          archFolder: mac_x64
          xplFileName: ${{ steps.build.outputs.xpl-file-name }}

  # Windows with MS Visual Studio
  build-win:
    runs-on: windows-2025
    env:
      platform: win
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/build-win
        id: build
        with:
          pluginName: ${{ env.PRJ_NAME }}

      - name: Upload Artifact
        uses: ./.github/actions/plugin-upload
        with:
          pluginName:  ${{ env.PRJ_NAME }}
          archFolder:  win_x64
          xplFileName:  "${{ steps.build.outputs.xpl-file-name }}"

  # Make an installation package
  make-package:
    runs-on: ubuntu-24.04
    env:
      platform: lin
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Make an installation package
        uses: ./.github/actions/make-package
        with:
          pluginName: ${{ env.PRJ_NAME }}
